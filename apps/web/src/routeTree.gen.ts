/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteRouteImport } from './routes/app/route'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as AppTasksRouteRouteImport } from './routes/app/tasks/route'
import { Route as AppAgentsRouteRouteImport } from './routes/app/agents/route'
import { Route as AppTasksIndexRouteImport } from './routes/app/tasks/index'
import { Route as AppAgentsIndexRouteImport } from './routes/app/agents/index'
import { Route as AppTasksIdRouteImport } from './routes/app/tasks/$id'
import { Route as AppAgentsAgentIdRouteRouteImport } from './routes/app/agents/$agentId/route'
import { Route as AppAgentsAgentIdIndexRouteImport } from './routes/app/agents/$agentId/index'
import { Route as AppAgentsAgentIdThreadIdIndexRouteImport } from './routes/app/agents/$agentId/$threadId/index'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const AppRouteRoute = AppRouteRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => authRouteRoute,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => authRouteRoute,
} as any)
const AppTasksRouteRoute = AppTasksRouteRouteImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppAgentsRouteRoute = AppAgentsRouteRouteImport.update({
  id: '/agents',
  path: '/agents',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppTasksIndexRoute = AppTasksIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppTasksRouteRoute,
} as any)
const AppAgentsIndexRoute = AppAgentsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppAgentsRouteRoute,
} as any)
const AppTasksIdRoute = AppTasksIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AppTasksRouteRoute,
} as any)
const AppAgentsAgentIdRouteRoute = AppAgentsAgentIdRouteRouteImport.update({
  id: '/$agentId',
  path: '/$agentId',
  getParentRoute: () => AppAgentsRouteRoute,
} as any)
const AppAgentsAgentIdIndexRoute = AppAgentsAgentIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppAgentsAgentIdRouteRoute,
} as any)
const AppAgentsAgentIdThreadIdIndexRoute =
  AppAgentsAgentIdThreadIdIndexRouteImport.update({
    id: '/$threadId/',
    path: '/$threadId/',
    getParentRoute: () => AppAgentsAgentIdRouteRoute,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof authRouteRouteWithChildren
  '/app': typeof AppRouteRouteWithChildren
  '/app/agents': typeof AppAgentsRouteRouteWithChildren
  '/app/tasks': typeof AppTasksRouteRouteWithChildren
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/app/': typeof AppIndexRoute
  '/app/agents/$agentId': typeof AppAgentsAgentIdRouteRouteWithChildren
  '/app/tasks/$id': typeof AppTasksIdRoute
  '/app/agents/': typeof AppAgentsIndexRoute
  '/app/tasks/': typeof AppTasksIndexRoute
  '/app/agents/$agentId/': typeof AppAgentsAgentIdIndexRoute
  '/app/agents/$agentId/$threadId': typeof AppAgentsAgentIdThreadIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof authRouteRouteWithChildren
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/app': typeof AppIndexRoute
  '/app/tasks/$id': typeof AppTasksIdRoute
  '/app/agents': typeof AppAgentsIndexRoute
  '/app/tasks': typeof AppTasksIndexRoute
  '/app/agents/$agentId': typeof AppAgentsAgentIdIndexRoute
  '/app/agents/$agentId/$threadId': typeof AppAgentsAgentIdThreadIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/app': typeof AppRouteRouteWithChildren
  '/app/agents': typeof AppAgentsRouteRouteWithChildren
  '/app/tasks': typeof AppTasksRouteRouteWithChildren
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-up': typeof authSignUpRoute
  '/app/': typeof AppIndexRoute
  '/app/agents/$agentId': typeof AppAgentsAgentIdRouteRouteWithChildren
  '/app/tasks/$id': typeof AppTasksIdRoute
  '/app/agents/': typeof AppAgentsIndexRoute
  '/app/tasks/': typeof AppTasksIndexRoute
  '/app/agents/$agentId/': typeof AppAgentsAgentIdIndexRoute
  '/app/agents/$agentId/$threadId/': typeof AppAgentsAgentIdThreadIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/app/agents'
    | '/app/tasks'
    | '/sign-in'
    | '/sign-up'
    | '/app/'
    | '/app/agents/$agentId'
    | '/app/tasks/$id'
    | '/app/agents/'
    | '/app/tasks/'
    | '/app/agents/$agentId/'
    | '/app/agents/$agentId/$threadId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sign-in'
    | '/sign-up'
    | '/app'
    | '/app/tasks/$id'
    | '/app/agents'
    | '/app/tasks'
    | '/app/agents/$agentId'
    | '/app/agents/$agentId/$threadId'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/app'
    | '/app/agents'
    | '/app/tasks'
    | '/(auth)/sign-in'
    | '/(auth)/sign-up'
    | '/app/'
    | '/app/agents/$agentId'
    | '/app/tasks/$id'
    | '/app/agents/'
    | '/app/tasks/'
    | '/app/agents/$agentId/'
    | '/app/agents/$agentId/$threadId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRouteRoute: typeof authRouteRouteWithChildren
  AppRouteRoute: typeof AppRouteRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/app/tasks': {
      id: '/app/tasks'
      path: '/tasks'
      fullPath: '/app/tasks'
      preLoaderRoute: typeof AppTasksRouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/agents': {
      id: '/app/agents'
      path: '/agents'
      fullPath: '/app/agents'
      preLoaderRoute: typeof AppAgentsRouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/tasks/': {
      id: '/app/tasks/'
      path: '/'
      fullPath: '/app/tasks/'
      preLoaderRoute: typeof AppTasksIndexRouteImport
      parentRoute: typeof AppTasksRouteRoute
    }
    '/app/agents/': {
      id: '/app/agents/'
      path: '/'
      fullPath: '/app/agents/'
      preLoaderRoute: typeof AppAgentsIndexRouteImport
      parentRoute: typeof AppAgentsRouteRoute
    }
    '/app/tasks/$id': {
      id: '/app/tasks/$id'
      path: '/$id'
      fullPath: '/app/tasks/$id'
      preLoaderRoute: typeof AppTasksIdRouteImport
      parentRoute: typeof AppTasksRouteRoute
    }
    '/app/agents/$agentId': {
      id: '/app/agents/$agentId'
      path: '/$agentId'
      fullPath: '/app/agents/$agentId'
      preLoaderRoute: typeof AppAgentsAgentIdRouteRouteImport
      parentRoute: typeof AppAgentsRouteRoute
    }
    '/app/agents/$agentId/': {
      id: '/app/agents/$agentId/'
      path: '/'
      fullPath: '/app/agents/$agentId/'
      preLoaderRoute: typeof AppAgentsAgentIdIndexRouteImport
      parentRoute: typeof AppAgentsAgentIdRouteRoute
    }
    '/app/agents/$agentId/$threadId/': {
      id: '/app/agents/$agentId/$threadId/'
      path: '/$threadId'
      fullPath: '/app/agents/$agentId/$threadId'
      preLoaderRoute: typeof AppAgentsAgentIdThreadIdIndexRouteImport
      parentRoute: typeof AppAgentsAgentIdRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface authRouteRouteChildren {
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface AppAgentsAgentIdRouteRouteChildren {
  AppAgentsAgentIdIndexRoute: typeof AppAgentsAgentIdIndexRoute
  AppAgentsAgentIdThreadIdIndexRoute: typeof AppAgentsAgentIdThreadIdIndexRoute
}

const AppAgentsAgentIdRouteRouteChildren: AppAgentsAgentIdRouteRouteChildren = {
  AppAgentsAgentIdIndexRoute: AppAgentsAgentIdIndexRoute,
  AppAgentsAgentIdThreadIdIndexRoute: AppAgentsAgentIdThreadIdIndexRoute,
}

const AppAgentsAgentIdRouteRouteWithChildren =
  AppAgentsAgentIdRouteRoute._addFileChildren(
    AppAgentsAgentIdRouteRouteChildren,
  )

interface AppAgentsRouteRouteChildren {
  AppAgentsAgentIdRouteRoute: typeof AppAgentsAgentIdRouteRouteWithChildren
  AppAgentsIndexRoute: typeof AppAgentsIndexRoute
}

const AppAgentsRouteRouteChildren: AppAgentsRouteRouteChildren = {
  AppAgentsAgentIdRouteRoute: AppAgentsAgentIdRouteRouteWithChildren,
  AppAgentsIndexRoute: AppAgentsIndexRoute,
}

const AppAgentsRouteRouteWithChildren = AppAgentsRouteRoute._addFileChildren(
  AppAgentsRouteRouteChildren,
)

interface AppTasksRouteRouteChildren {
  AppTasksIdRoute: typeof AppTasksIdRoute
  AppTasksIndexRoute: typeof AppTasksIndexRoute
}

const AppTasksRouteRouteChildren: AppTasksRouteRouteChildren = {
  AppTasksIdRoute: AppTasksIdRoute,
  AppTasksIndexRoute: AppTasksIndexRoute,
}

const AppTasksRouteRouteWithChildren = AppTasksRouteRoute._addFileChildren(
  AppTasksRouteRouteChildren,
)

interface AppRouteRouteChildren {
  AppAgentsRouteRoute: typeof AppAgentsRouteRouteWithChildren
  AppTasksRouteRoute: typeof AppTasksRouteRouteWithChildren
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppAgentsRouteRoute: AppAgentsRouteRouteWithChildren,
  AppTasksRouteRoute: AppTasksRouteRouteWithChildren,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRouteRoute: authRouteRouteWithChildren,
  AppRouteRoute: AppRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
